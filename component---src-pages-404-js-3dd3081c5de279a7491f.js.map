{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","Layout","_ref","children","_public_static_d_856328897_json__WEBPACK_IMPORTED_MODULE_0__","data","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","style","margin","maxWidth","padding","display","gridTemplateRows","alignItems","justifyItems","placeSelf","Date","getFullYear","href","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,kIC2CWE,IAvCA,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACNC,EAAAC,KAUV,OACEC,EAAAR,EAAAC,cAAAO,EAAAR,EAAAS,SAAA,KACED,EAAAR,EAAAC,cAAA,OACES,MAAO,CACLC,OAAM,YACNC,SAAU,KACVC,QAAO,cACPC,QAAO,OACPC,iBAAgB,MAChBC,WAAU,SACVC,aAAY,WAGdT,EAAAR,EAAAC,cAAA,QAAMS,MAAO,CAAEQ,UAAS,WAAeb,IAEzCG,EAAAR,EAAAC,cAAA,oBACK,IAAIkB,MAAOC,cADhB,oBAGEZ,EAAAR,EAAAC,cAAA,KAAGoB,KAAK,4BAAR,iKC9BR,SAASC,EAATlB,GAAiD,IAAlCmB,EAAkCnB,EAAlCmB,YAAaC,EAAqBpB,EAArBoB,KAAMC,EAAerB,EAAfqB,KAAMvB,EAASE,EAATF,MAC9BwB,EADuCC,EAAApB,KACvCmB,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEf,EAAAR,EAAAC,cAAC6B,EAAA9B,EAAD,CACE+B,eAAgB,CACdP,QAEFtB,MAAOA,EACP8B,cAAa,KACbP,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAShC,GAEX,CACEiC,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAI,gBACJC,QAAShC,GAEX,CACE+B,KAAI,sBACJC,QAASN,IAEXS,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED","file":"component---src-pages-404-js-3dd3081c5de279a7491f.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>Not Found</h1>\n    <p>You just hit a route that doesn't exist... :(</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div\n        style={{\n          margin: `3rem auto`,\n          maxWidth: 1024,\n          padding: `0 1.0875rem`,\n          display: `grid`,\n          gridTemplateRows: `1fr`,\n          alignItems: `center`,\n          justifyItems: `center`,\n        }}\n      >\n        <main style={{ placeSelf: `center` }}>{children}</main>\n      </div>\n      <footer>\n        © {new Date().getFullYear()} • Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Index","render","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","title","className","Component","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","loader","enqueue","createContext","Header","siteTitle","react_default","gatsby_link_default","to","id","href","target","rel","Layout","children","_856328897","Fragment","components_header","Date","getFullYear"],"mappings":"kJAMMA,kLACJC,OAAA,WACE,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,MAAM,8BACXL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,ozBAasC,IACpCF,EAAAC,EAAAC,cAAA,mJArBQK,aAgCLT,iCCtCf,IAAsBU,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,gJCsBhCK,UAjBU,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEC,IAAMf,cAAcgB,IAApBC,OAAAC,OAAA,CACLL,WACAC,iBACGA,EAAcK,OALV,uFCKX,SAASC,EAATR,GAAiD,IAAlCS,EAAkCT,EAAlCS,YAAaC,EAAqBV,EAArBU,KAAMC,EAAeX,EAAfW,KAAMpB,EAASS,EAATT,MAC9BqB,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAA9B,EAAAC,cAAC8B,EAAA/B,EAAD,CACEgC,eAAgB,CACdT,QAEFnB,MAAOA,EACP6B,cAAa,KACbT,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS/B,GAEX,CACEgC,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAS/B,GAEX,CACE8B,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED,gWCzEUmB,QAAOC,QAELzB,IAAM0B,cAAc,eCVzCC,EAAS,SAAA9B,KAAG+B,UAAH,OACbC,EAAA7C,EAAAC,cAAA,OAAKI,UAAU,mBACbwC,EAAA7C,EAAAC,cAAA,OAAKI,UAAU,iBACbwC,EAAA7C,EAAAC,cAAC6C,EAAA9C,EAAD,CAAM+C,GAAG,IAAI1C,UAAU,cACrBwC,EAAA7C,EAAAC,cAAA,wCAEF4C,EAAA7C,EAAAC,cAAC6C,EAAA9C,EAAD,CAAM+C,GAAG,YAAYC,GAAG,iBAAxB,YAGAH,EAAA7C,EAAAC,cAAA,KACEgD,KAAK,qFACLC,OAAO,SACPC,IAAI,sBACJH,GAAG,eAJL,UAQAH,EAAA7C,EAAAC,cAAC6C,EAAA9C,EAAD,CAAM+C,GAAG,WAAWC,GAAG,gBAAvB,cAWNL,EAAOJ,aAAe,CACpBK,UAAS,IAGID,eCMAS,IA9BA,SAAAvC,GAAkB,IAAfwC,EAAexC,EAAfwC,SACNC,EAAA3B,KAUV,OACEkB,EAAA7C,EAAAC,cAAA4C,EAAA7C,EAAAuD,SAAA,KACEV,EAAA7C,EAAAC,cAAA,OAAKI,UAAU,mBACbwC,EAAA7C,EAAAC,cAACuD,EAAD,MACAX,EAAA7C,EAAAC,cAAA,QAAMI,UAAU,iBAAiBgD,GACjCR,EAAA7C,EAAAC,cAAA,oBACK,IAAIwD,MAAOC,cADhB,oBAGEb,EAAA7C,EAAAC,cAAA,KAAGgD,KAAK,4BAAR","file":"component---src-pages-index-js-fce08dfb16be2f39592b.js","sourcesContent":["import React, { Component } from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"./pages.css\"\n\nclass Index extends Component {\n  render() {\n    return (\n      <Layout>\n        <SEO title=\"Isabelle Jordan Lavandero\" />\n        <div className=\"content\">\n          <h1>Hello world, I'm Isabelle! üëãüèºüåè</h1>\n          <p>\n            Hailing from the Philippines, I‚Äôm now a senior at NYU studying\n            computer science with a minor in media, culture, and communication.\n            In a nutshell, I‚Äôm passionate about the intersection of technology\n            and storytelling. Last summer, I interned on the Newsroom\n            Engineering team at The Washington Post, helping to build out the\n            front-end infrastructure of their 2020 election coverage. On campus,\n            I‚Äôm a student developer at the Residential Life office, half of a\n            two-person team designing and maintaining features for the\n            university‚Äôs central housing platform. I‚Äôm also the marketing\n            director for the Women in Computing club and was a teaching\n            assistant for several introductory CS classes. Aside from tinkering\n            with creative applications of code, I love reading, cooking, going\n            to museums, and curating playlists.{\" \"}\n            <strong>\n              I‚Äôm currently looking for full-time, entry-level opportunities\n              starting June 2020, so any leads would be much appreciated!\n            </strong>\n          </p>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Index\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport \"./header.css\"\n\nconst Header = ({ siteTitle }) => (\n  <div className=\"headerContainer\">\n    <div className=\"headerContent\">\n      <Link to=\"/\" className=\"headerName\">\n        <h2>Isabelle Jordan Lavandero</h2>\n      </Link>\n      <Link to=\"/projects\" id=\"projects_link\">\n        projects\n      </Link>\n      <a\n        href=\"https://drive.google.com/file/d/1IrRhJ5pPYCTgcNEl25ePJ_tFJSVIS79e/view?usp=sharing\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        id=\"resume_link\"\n      >\n        r√©sum√©\n      </a>\n      <Link to=\"/contact\" id=\"contact_link\">\n        contact\n      </Link>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\n\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div className=\"layoutContainer\">\n        <Header />\n        <main className=\"layoutContent\">{children}</main>\n        <footer>\n          ¬© {new Date().getFullYear()} ‚Ä¢ Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}